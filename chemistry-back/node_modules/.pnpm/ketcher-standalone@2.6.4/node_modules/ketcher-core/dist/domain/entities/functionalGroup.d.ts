import { SGroup } from './sgroup';
export declare class FunctionalGroup {
    #private;
    constructor(sgroup: SGroup);
    get name(): string;
    get relatedSGroupId(): number;
    get isExpanded(): boolean;
    get relatedSGroup(): SGroup;
    static isFunctionalGroup(sgroup: any): boolean;
    static atomsInFunctionalGroup(functionalGroups: any, atom: any): number | null;
    static bondsInFunctionalGroup(molecule: any, functionalGroups: any, bond: any): number | null;
    static findFunctionalGroupByAtom(functionalGroups: any, atom: any): number | null;
    static findFunctionalGroupByBond(molecule: any, functionalGroups: any, bond: any): number | null;
    static clone(functionalGroup: FunctionalGroup): FunctionalGroup;
    static isFirstAtomInFunctionalGroup(sgroups: any, aid: any): boolean;
    static isAtomInContractedFunctionalGroup(atom: any, sgroups: any, functionalGroups: any, sgroupsFromReStruct: boolean): boolean;
    static isBondInContractedFunctionalGroup(bond: any, sgroups: any, functionalGroups: any, sgroupsFromReStruct: boolean): boolean;
    static isContractedFunctionalGroup(sgroupId: any, functionalGroups: any): boolean;
}
