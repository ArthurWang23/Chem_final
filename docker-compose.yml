version: "3.9"
services:
  backend:
    build:
      context: ./pure-admin-backend
    image: chem-backend:latest
    environment:
      NODE_ENV: production
      PORT: 3000
      JWT_SECRET: "please-change-to-a-strong-random-secret"
      HARDWARE_CONTROLLER: "true"
      UDP_TARGET_IP: "192.168.1.255"
      UDP_TARGET_PORT: "8080"
      HARDWARE_LOCAL_IP: "0.0.0.0"
      CORS_ORIGIN: "http://localhost"
    ports:
      - "3000:3000"
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:3000/health || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 20s
    networks:
      - chemnet

  chemistry-back:
    build:
      context: ./chemistry-back
    image: chemistry-back:latest
    # 一般无需暴露到外网，Nginx 在同一网络内通过服务名访问即可
    # ports:
    #   - "3004:3004"
    healthcheck:
      # 检查 3004 端口可连接（chemistry-back 主要是 WS 服务）
      test: ["CMD-SHELL", "node -e \"require('net').connect(3004, '127.0.0.1').on('connect',()=>process.exit(0)).on('error',()=>process.exit(1))\""]
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 20s
    networks:
      - chemnet

  web:
    build:
      context: .
      dockerfile: Dockerfile.web
    image: chem-frontend:latest
    depends_on:
      - backend
      - chemistry-back
    ports:
      - "80:80"
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost/ || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 20s
    networks:
      - chemnet

networks:
  chemnet:
    driver: bridge